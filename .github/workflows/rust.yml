name: Rust

on:
  push:
    tags: [ "v*" ]   # run only on version tags like v1.0.0

permissions:
  contents: write 

env:
  CARGO_TERM_COLOR: always
  BIN_NAME: gtnh_scanner 

jobs:
  build:
    name: Build ${{ matrix.artifact }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            artifact: linux-x86_64
            bin_ext: ""
            archive_ext: tar.gz
          - os: windows-latest
            artifact: windows-x86_64
            bin_ext: ".exe"
            archive_ext: zip

    steps:
      - uses: actions/checkout@v4

      - name: Build (release)
        run: cargo build --release --verbose

      - name: Package Linux (tar.gz)
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir -p dist/${BIN_NAME}-${{ matrix.artifact }}
          cp target/release/${BIN_NAME} dist/${BIN_NAME}-${{ matrix.artifact }}/
          cp README.md LICENSE* dist/${BIN_NAME}-${{ matrix.artifact }}/ 2>/dev/null || true
          tar -czf ${BIN_NAME}-${{ matrix.artifact }}.${{ matrix.archive_ext }} -C dist ${BIN_NAME}-${{ matrix.artifact }}

      - name: Package Windows (zip)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path dist\${env:BIN_NAME}-${{ matrix.artifact }} | Out-Null
          Copy-Item "target/release/${env:BIN_NAME}${{ matrix.bin_ext }}" "dist\${env:BIN_NAME}-${{ matrix.artifact }}\"
          if (Test-Path README.md) { Copy-Item README.md "dist\${env:BIN_NAME}-${{ matrix.artifact }}\" }
          if (Test-Path LICENSE) { Copy-Item LICENSE "dist\${env:BIN_NAME}-${{ matrix.artifact }}\" }
          Compress-Archive -Path "dist\${env:BIN_NAME}-${{ matrix.artifact }}\*" -DestinationPath "${env:BIN_NAME}-${{ matrix.artifact }}.${{ matrix.archive_ext }}" -Force

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BIN_NAME }}-${{ matrix.artifact }}
          path: ${{ env.BIN_NAME }}-${{ matrix.artifact }}.${{ matrix.archive_ext }}

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download packaged artifacts
        uses: actions/download-artifact@v4
        with:
          path: releases

      - name: Create/Update Release with assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          generate_release_notes: true
          files: releases/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
